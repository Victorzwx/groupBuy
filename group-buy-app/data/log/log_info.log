25-03-04.09:33:02.323 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 20228 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.09:33:02.325 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-04.09:33:03.855 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.09:33:03.860 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.09:33:03.954 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 0 Redis repository interfaces.
25-03-04.09:33:04.436 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5cdc14bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.09:33:04.994 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.09:33:05.874 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.09:33:06.877 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.09:33:07.253 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.09:33:07.422 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.09:33:13.197 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.09:33:13.300 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 11.628 seconds (JVM running for 12.955)
25-03-04.09:33:13.879 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge2 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge2"}
25-03-04.09:33:13.880 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge2 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge2"}
25-03-04.09:33:13.919 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.09:33:15.525 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.09:33:16.058 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge2 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.09:33:16.058 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge2 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge2"}
25-03-04.09:33:16.058 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.09:33:16.201 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge2 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge2"}
25-03-04.09:33:16.204 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 请求参数:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge2"}
25-03-04.09:33:16.229 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 返回结果:{"deductionPrice":10.00,"endTime":1765073980000,"goodsId":"9890001","goodsName":"《手写MyBatis：渐进式源码实践》","groupBuyActivityDiscountVO":{"activityId":100123,"activityName":"测试活动","enable":true,"endTime":1765073980000,"groupBuyDiscount":{"discountDesc":"满减优惠100-10元","discountName":"满减优惠100-10元","discountType":"BASE","marketExpr":"100,10","marketPlan":"MJ"},"groupType":0,"startTime":1733537980000,"status":1,"tagId":"RQ_KJHKL98UU78H66554GFDV","tagScope":"1,2","takeLimitCount":2,"target":3,"validTime":15,"visible":false},"isEnable":true,"isVisible":true,"originalPrice":100.00,"payPrice":90.00,"startTime":1733537980000,"targetCount":3}
25-03-04.09:33:16.262 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.09:33:16.412 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:06:13.868 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 1704 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:06:13.869 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:06:15.484 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:06:15.488 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:06:15.588 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 0 Redis repository interfaces.
25-03-04.10:06:16.104 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$c54f98f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:06:16.594 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:06:17.537 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:06:18.487 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:06:18.874 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:06:18.994 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:06:23.538 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:06:23.635 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 10.271 seconds (JVM running for 11.503)
25-03-04.10:06:24.095 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"782447478749","source":"s01","userId":"xiaofuge"}
25-03-04.10:06:24.095 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:782447478749
25-03-04.10:06:24.129 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:06:25.761 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:06:25.916 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:06:25.916 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:06:26.198 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.10:06:26.199 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:06:26.199 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.10:06:26.257 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:06:26.272 [main            ] INFO  TradeOrderService      - 拼团交易-锁定营销优惠支付订单:xiaofuge activityId:100123 goodsId:9890001
25-03-04.10:06:26.275 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验xiaofuge activityId:100123
25-03-04.10:06:26.335 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xiaofuge activityId:100123
25-03-04.10:06:26.893 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"782447478749","source":"s01","userId":"xiaofuge"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'pay_price' cannot be null
### The error may exist in file [C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app\target\classes\mybatis\mapper\group_buy_order_mapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into group_buy_order(             team_id, activity_id, source, channel, original_price,             deduction_price, pay_price, target_count, complete_count, lock_count, status, create_time, update_time         ) values(                     ?, ?, ?, ?, ?,                     ?, ?, ?, ?, ?, 0, now(), now()                 )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'pay_price' cannot be null
; Column 'pay_price' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'pay_price' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy94.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at cn.bugstack.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:88)
	at cn.bugstack.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$385a4bbd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.bugstack.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$7fb3c374.lockMarketPayOrder(<generated>)
	at cn.bugstack.domain.trade.service.TradeOrderService.lockMarketPayOrder(TradeOrderService.java:63)
	at cn.bugstack.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:120)
	at cn.bugstack.test.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'pay_price' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 58 common frames omitted
25-03-04.10:06:26.902 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"782447478749","source":"s01","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-04.10:06:26.942 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:06:27.107 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:12:20.938 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 2716 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:12:20.940 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:12:22.963 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:12:22.970 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:12:23.123 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 0 Redis repository interfaces.
25-03-04.10:12:23.909 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$6f1f2d07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:12:24.627 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:12:25.620 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:12:26.743 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:12:27.115 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:12:27.221 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:12:32.388 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:12:32.487 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 12.39 seconds (JVM running for 14.555)
25-03-04.10:13:30.987 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"408276680024","source":"s01","userId":"xiaofuge"}
25-03-04.10:13:48.452 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:408276680024
25-03-04.10:14:45.529 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:14:53.974 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:17:19.339 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:17:19.340 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:17:45.558 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m15s577ms844µs300ns).
25-03-04.10:18:10.368 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.10:18:10.368 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:18:10.369 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.10:18:45.541 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:19:55.370 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s605ms946µs100ns).
25-03-04.10:19:55.384 [main            ] INFO  TradeOrderService      - 拼团交易-锁定营销优惠支付订单:xiaofuge activityId:100123 goodsId:9890001
25-03-04.10:19:55.386 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验xiaofuge activityId:100123
25-03-04.10:19:55.479 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:19:55.499 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xiaofuge activityId:100123
25-03-04.10:19:55.513 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"408276680024","source":"s01","userId":"xiaofuge"}
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'redissonConnectionFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:481)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.bugstack.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$f979dd2d.queryOrderCountByActivityId(<generated>)
	at cn.bugstack.domain.trade.service.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:35)
	at cn.bugstack.domain.trade.service.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:21)
	at cn.bugstack.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at cn.bugstack.domain.trade.service.TradeOrderService.lockMarketPayOrder(TradeOrderService.java:46)
	at cn.bugstack.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:120)
	at cn.bugstack.test.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
25-03-04.10:19:55.536 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"408276680024","source":"s01","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-04.10:19:56.072 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:20:11.284 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 6320 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:20:11.285 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:20:12.602 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:20:12.606 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:20:12.697 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 0 Redis repository interfaces.
25-03-04.10:20:13.153 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$91123be4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:20:13.641 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:20:14.410 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:20:15.283 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:20:15.946 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:20:16.041 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:20:20.912 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:20:20.998 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 10.204 seconds (JVM running for 11.448)
25-03-04.10:20:21.439 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"160123623684","source":"s01","userId":"xiaofuge"}
25-03-04.10:20:21.439 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:160123623684
25-03-04.10:20:21.472 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:20:22.943 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:20:23.095 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:20:23.095 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:20:23.376 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.10:20:23.376 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:20:23.376 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.10:20:23.443 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-04.10:20:23.456 [main            ] INFO  TradeOrderService      - 拼团交易-锁定营销优惠支付订单:xiaofuge activityId:100123 goodsId:9890001
25-03-04.10:20:23.461 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验xiaofuge activityId:100123
25-03-04.10:20:23.521 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xiaofuge activityId:100123
25-03-04.10:20:24.012 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):xiaofuge marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"821331437902","tradeOrderStatusEnumVO":"CREATE"}
25-03-04.10:20:24.028 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"160123623684","source":"s01","userId":"xiaofuge"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"821331437902","tradeOrderStatus":0},"info":"成功"}
25-03-04.10:20:24.062 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:20:24.212 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:22:38.191 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 13524 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:22:38.192 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:22:39.526 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:22:39.531 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:22:39.624 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 0 Redis repository interfaces.
25-03-04.10:22:40.088 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$b892333e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:22:40.556 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:22:41.347 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:22:42.228 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:22:42.581 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:22:42.687 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:22:47.022 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:22:47.108 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 9.409 seconds (JVM running for 10.595)
25-03-04.10:22:47.589 [main            ] INFO  MarketTradeController  - 营销交易锁单:liergou LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"499666694338","source":"s01","teamId":"18756754","userId":"liergou"}
25-03-04.10:22:47.589 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:liergou outTradeNo:499666694338
25-03-04.10:22:47.623 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:22:49.502 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:22:49.662 [main            ] INFO  TradeOrderService      - 拼团交易-查询拼单进度:18756754
25-03-04.10:22:49.734 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:22:49.735 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:22:50.520 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:liergou 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.10:22:50.520 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:22:50.520 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.10:22:50.588 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:22:50.601 [main            ] INFO  TradeOrderService      - 拼团交易-锁定营销优惠支付订单:liergou activityId:100123 goodsId:9890001
25-03-04.10:22:50.607 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验liergou activityId:100123
25-03-04.10:22:50.666 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验liergou activityId:100123
25-03-04.10:22:51.377 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):liergou marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"831992918560","tradeOrderStatusEnumVO":"CREATE"}
25-03-04.10:22:51.394 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"499666694338","source":"s01","teamId":"18756754","userId":"liergou"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"831992918560","tradeOrderStatus":0},"info":"成功"}
25-03-04.10:22:51.430 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:22:52.129 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:23:29.306 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 2672 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:23:29.316 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:23:31.189 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:23:31.196 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:23:31.335 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 0 Redis repository interfaces.
25-03-04.10:23:32.004 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$c54f98f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:23:32.729 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:23:33.785 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:23:34.813 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:23:35.194 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:23:35.284 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:23:39.049 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:23:39.131 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 10.539 seconds (JVM running for 12.191)
25-03-04.10:23:39.567 [main            ] INFO  MarketTradeController  - 营销交易锁单:liergou LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"240653277190","source":"s01","teamId":"18756754","userId":"liergou"}
25-03-04.10:23:39.567 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:liergou outTradeNo:240653277190
25-03-04.10:23:39.603 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:23:41.085 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:23:41.229 [main            ] INFO  TradeOrderService      - 拼团交易-查询拼单进度:18756754
25-03-04.10:23:41.305 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:23:41.306 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:23:41.572 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:liergou 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-04.10:23:41.572 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:23:41.572 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算:满减优惠100-10元
25-03-04.10:23:41.632 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:liergou requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"liergou"}
25-03-04.10:23:41.647 [main            ] INFO  TradeOrderService      - 拼团交易-锁定营销优惠支付订单:liergou activityId:100123 goodsId:9890001
25-03-04.10:23:41.651 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验liergou activityId:100123
25-03-04.10:23:41.713 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验liergou activityId:100123
25-03-04.10:23:41.773 [main            ] INFO  UserTakeLimitRuleFilter - 用户参与次数校验，已达可参与上限 activityId:100123
25-03-04.10:23:41.784 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:liergou LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"240653277190","source":"s01","teamId":"18756754","userId":"liergou"}
cn.bugstack.types.exception.AppException: null
	at cn.bugstack.domain.trade.service.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:39)
	at cn.bugstack.domain.trade.service.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:21)
	at cn.bugstack.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at cn.bugstack.domain.trade.service.TradeOrderService.lockMarketPayOrder(TradeOrderService.java:46)
	at cn.bugstack.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:120)
	at cn.bugstack.test.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder_teamId_not_null(MarketTradeControllerTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
25-03-04.10:23:41.794 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"240653277190","source":"s01","teamId":"18756754","userId":"liergou"} res:{"code":"E0103","info":"当前用户参与此拼团次数已达上限"}
25-03-04.10:23:41.836 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:23:42.305 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-04.10:24:43.615 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_411 on LAPTOP-T2LJDCAR with PID 9568 (started by zwx in C:\Users\zwx\Desktop\KnowledgePlanet\group-buy\group-buy-app)
25-03-04.10:24:43.616 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-04.10:24:44.959 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-04.10:24:44.963 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-04.10:24:45.054 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 0 Redis repository interfaces.
25-03-04.10:24:45.505 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.bugstack.config.RedisClientConfig$$EnhancerBySpringCGLIB$$b892333e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:24:46.014 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.bugstack.config.RedisClientConfigProperties' of type [cn.bugstack.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:24:46.994 [main            ] INFO  Version                - Redisson 3.26.0
25-03-04.10:24:47.955 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:24:48.340 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.40.24/117.72.40.24:16379
25-03-04.10:24:48.447 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-04.10:24:52.573 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-04.10:24:52.652 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 9.54 seconds (JVM running for 10.856)
25-03-04.10:24:53.083 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg01 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"817495841881","source":"s01","teamId":"18756754","userId":"xfg01"}
25-03-04.10:24:53.083 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xfg01 outTradeNo:817495841881
25-03-04.10:24:53.117 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-04.10:24:54.668 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-04.10:24:54.805 [main            ] INFO  TradeOrderService      - 拼团交易-查询拼单进度:18756754
25-03-04.10:24:54.861 [main            ] INFO  MarketTradeController  - 交易锁单拦截-拼单目标已达成:xfg01 18756754
25-03-04.10:24:54.870 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"817495841881","source":"s01","teamId":"18756754","userId":"xfg01"} res:{"code":"E0006","info":"拼团组队完结，锁单量已达成"}
25-03-04.10:24:54.902 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-04.10:24:55.373 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
